{
    "swagger": "2.0",
    "info": {
        "description": "This is an auto-generated API docs.",
        "title": "REST-API with(golang fiber, google wire dependency injection)",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "San KaungKin",
            "email": "sankaungkin@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:5555",
    "paths": {
        "/api/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login to the api with email and password",
                "parameters": [
                    {
                        "description": "Login Data",
                        "name": "info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_auth.SignInRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_auth.SignInResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "description": "Logout user",
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "description": "Get new access token using refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_auth.RefreshRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_auth.RefreshResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Register new user based on parameters",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Create new user based on parameters",
                "parameters": [
                    {
                        "description": "Signup Data",
                        "name": "info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_auth.SignUpDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_auth.SignUpResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Bearer  \u003c-----------------------------------------add this in all controllers that need authentication": []
                    }
                ],
                "description": "Fetch all Categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Fetch all Categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Category"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Bearer  \u003c-----------------------------------------add this in all controllers that need authentication": []
                    }
                ],
                "description": "Create new category based on parameters",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create new category based on parameters",
                "parameters": [
                    {
                        "description": "Category Data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_category.CreateCategoryRequestDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Bearer  \u003c-----------------------------------------add this in all controllers that need authentication": []
                    }
                ],
                "description": "Fetch individual category by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Fetch individual category by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Bearer  \u003c-----------------------------------------add this in all controllers that need authentication": []
                    }
                ],
                "description": "Update individual category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Update individual category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category Data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCategoryRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "Bearer  \u003c-----------------------------------------add this in all controllers that need authentication": []
                    }
                ],
                "description": "Delete individual category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete individual category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/customers": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch all customers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Fetch all customers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Customer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create new customer based on parameters",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Create new customer based on parameters",
                "parameters": [
                    {
                        "description": "Product Data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_customer.CreateCustomerRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/customers/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch individual customer by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Fetch individual customer by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update individual customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Update individual customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product Data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_customer.UpdateCustomerRequstDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete individual customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Delete individual customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/inventories": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch all inventory records",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Inventories"
                ],
                "summary": "Fetch all inventory records",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Inventory"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/inventories/decrease": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create decrease inventory record based on parameters",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Inventories"
                ],
                "summary": "Create decrease inventory record based on parameters",
                "parameters": [
                    {
                        "description": "Inventory Data",
                        "name": "inventory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_inventory.IncreaseInventoryDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Inventory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/inventories/increase": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create increase inventory record based on parameters",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Inventories"
                ],
                "summary": "Create increase inventory record based on parameters",
                "parameters": [
                    {
                        "description": "Inventory Data",
                        "name": "inventory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_inventory.IncreaseInventoryDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Inventory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/product": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new product with name, category, prices, and status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Create new product",
                "parameters": [
                    {
                        "description": "Product input data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_product.CreateProductRequstDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch all products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Fetch all products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Product"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/products/conversions/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get unit conversions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get unit conversions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.UnitConversion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/products/conversions/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get unit conversions by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get unit conversions by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.UnitConversion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/products/prices/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all product prices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get all product prices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/products/prices/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch individual product price by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Fetch individual product price by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/products/stocks": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all product stocks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get all product stocks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/products/stocks/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all product stocks By Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get all product stocks By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch individual product by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Fetch individual product by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update individual product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Update individual product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product Data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_product.UpdateProductRequstDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete individual product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Delete individual product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/purchases": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch all purchases",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchases"
                ],
                "summary": "Fetch all purchases",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Purchase"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create new purchase based on parameters",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Purchases"
                ],
                "summary": "Create new purchase based on parameters",
                "parameters": [
                    {
                        "description": "Product Data",
                        "name": "purchase",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_purchase.PurchaseInvoiceRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Purchase"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/purchases/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch individual purchase by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Purchases"
                ],
                "summary": "Fetch individual purchase by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "purchase Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Purchase"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/sales": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch all sales",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales"
                ],
                "summary": "Fetch all sales",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Sale"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create new sale based on parameters",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Sales"
                ],
                "summary": "Create new sale based on parameters",
                "parameters": [
                    {
                        "description": "Product Data",
                        "name": "sale",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_sale.SaleInvoiceRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Sale"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/sales/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch individual sale by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales"
                ],
                "summary": "Fetch individual sale by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sale Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Sale"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/suppliers": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch all supplier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Suppliers"
                ],
                "summary": "Fetch all supplier",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Supplier"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create new supplier based on parameters",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Suppliers"
                ],
                "summary": "Create new supplier based on parameters",
                "parameters": [
                    {
                        "description": "Supplier Data",
                        "name": "supplier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_supplier.CreateSupplierRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Supplier"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/suppliers/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch individual supplier by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Suppliers"
                ],
                "summary": "Fetch individual supplier by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "supplier Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Supplier"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update individual supplier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Suppliers"
                ],
                "summary": "Update individual supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Supplier Data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_supplier.UpdateSupplierRequstDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Supplier"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete individual supplier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Suppliers"
                ],
                "summary": "Delete individual supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "supplier Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Supplier"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/transactions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch all transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Fetch all transactions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.ItemTransaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/transactions/adjustment": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Create adjustment transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Product input data",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_itemtransactions.ResquestAdjustInventoryDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.ItemTransaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/transactions/by-product-type/{productId}/{tranType}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch individual transaction by productId and tranType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Fetch individual transaction by productId and tranType",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "productId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction Type",
                        "name": "tranType",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.ItemTransaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/transactions/by-product/{productId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch individual transaction by productId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Fetch individual transaction by productId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.ItemTransaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        },
        "/api/transactions/by-type/{tranType}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch individual transaction by protransactionType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Fetch individual transaction by transactionType",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transactionType",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.ItemTransaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError400"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError401"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HttpError500"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.UpdateCategoryRequestDTO": {
            "type": "object",
            "properties": {
                "categoryName": {
                    "type": "string"
                }
            }
        },
        "github_com_sankangkin_di-rest-api_internal_models.Category": {
            "type": "object",
            "required": [
                "categoryName"
            ],
            "properties": {
                "categoryName": {
                    "type": "string",
                    "minLength": 3
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_sankangkin_di-rest-api_internal_models.Customer": {
            "type": "object",
            "required": [
                "address",
                "name",
                "phone"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "minLength": 3
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "minLength": 3
                },
                "phone": {
                    "type": "string",
                    "minLength": 3
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_sankangkin_di-rest-api_internal_models.Inventory": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "inQty": {
                    "type": "integer"
                },
                "outQty": {
                    "type": "integer"
                },
                "product": {
                    "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Product"
                },
                "productId": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedTime": {
                    "type": "string"
                }
            }
        },
        "github_com_sankangkin_di-rest-api_internal_models.ItemTransaction": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdTime": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "description": "TODO to enhance with UUID",
                    "type": "integer"
                },
                "inQty": {
                    "type": "integer"
                },
                "outQty": {
                    "type": "integer"
                },
                "productId": {
                    "type": "string"
                },
                "referenceNo": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "tranType": {
                    "type": "string"
                },
                "uom": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_sankangkin_di-rest-api_internal_models.Product": {
            "type": "object",
            "required": [
                "buyPrice",
                "productName",
                "sellPricelvl1",
                "sellPricelvl2",
                "uomId"
            ],
            "properties": {
                "brandName": {
                    "type": "string"
                },
                "buyPrice": {
                    "type": "integer",
                    "minimum": 1
                },
                "categoryId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "productName": {
                    "type": "string",
                    "minLength": 3
                },
                "sellPricelvl1": {
                    "type": "integer",
                    "minimum": 1
                },
                "sellPricelvl2": {
                    "type": "integer",
                    "minimum": 1
                },
                "uom": {
                    "type": "string"
                },
                "uomId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_sankangkin_di-rest-api_internal_models.Purchase": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "discount": {
                    "type": "integer"
                },
                "grandTotal": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "purchaseDate": {
                    "type": "string"
                },
                "purchaseDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.PurchaseDetail"
                    }
                },
                "remark": {
                    "type": "string"
                },
                "supplier": {
                    "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Supplier"
                },
                "supplierId": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_sankangkin_di-rest-api_internal_models.PurchaseDetail": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "productId": {
                    "type": "string"
                },
                "productName": {
                    "type": "string"
                },
                "purchaseId": {
                    "type": "string"
                },
                "qty": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "uom": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_sankangkin_di-rest-api_internal_models.Role": {
            "type": "string",
            "enum": [
                "admin",
                "user"
            ],
            "x-enum-varnames": [
                "ADMIN",
                "USER"
            ]
        },
        "github_com_sankangkin_di-rest-api_internal_models.Sale": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "customer": {
                    "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Customer"
                },
                "customerId": {
                    "type": "integer"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "discount": {
                    "type": "integer"
                },
                "grandTotal": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "saleDate": {
                    "type": "string"
                },
                "saleDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.SaleDetail"
                    }
                },
                "total": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_sankangkin_di-rest-api_internal_models.SaleDetail": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "derivedQty": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "productId": {
                    "type": "string"
                },
                "productName": {
                    "type": "string"
                },
                "qty": {
                    "type": "integer"
                },
                "saleId": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "uom": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_sankangkin_di-rest-api_internal_models.Supplier": {
            "type": "object",
            "required": [
                "address",
                "name",
                "phone"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "minLength": 3
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "minLength": 3
                },
                "phone": {
                    "type": "string",
                    "minLength": 3
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_sankangkin_di-rest-api_internal_models.UnitConversion": {
            "type": "object",
            "required": [
                "baseUnit",
                "baseUnitId",
                "deriveUnit",
                "deriveUnitId",
                "factor",
                "productId"
            ],
            "properties": {
                "baseUnit": {
                    "type": "string"
                },
                "baseUnitId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "deriveUnit": {
                    "type": "string"
                },
                "deriveUnitId": {
                    "type": "integer"
                },
                "factor": {
                    "type": "integer",
                    "minimum": 1
                },
                "id": {
                    "type": "integer"
                },
                "productId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_sankangkin_di-rest-api_internal_models.User": {
            "type": "object",
            "required": [
                "email",
                "isAdmin",
                "password",
                "role",
                "userName"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "minLength": 3
                },
                "role": {
                    "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.Role"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userName": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "httputil.HttpError400": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "httputil.HttpError401": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 401
                },
                "message": {
                    "type": "string",
                    "example": "Unauthorized"
                }
            }
        },
        "httputil.HttpError500": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "message": {
                    "type": "string",
                    "example": "internal server error"
                }
            }
        },
        "internal_auth.RefreshRequestDTO": {
            "type": "object",
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "internal_auth.RefreshResponseDTO": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "internal_auth.SignInRequestDTO": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "internal_auth.SignInResponseDTO": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "internal_auth.SignUpDTO": {
            "type": "object",
            "required": [
                "email",
                "password",
                "role",
                "userName"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "internal_auth.SignUpResponseDTO": {
            "type": "object",
            "properties": {
                "AccessToken": {
                    "type": "string"
                },
                "RefreshToken": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.User"
                }
            }
        },
        "internal_domain_category.CreateCategoryRequestDTO": {
            "type": "object",
            "properties": {
                "categoryName": {
                    "type": "string"
                }
            }
        },
        "internal_domain_customer.CreateCustomerRequestDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "internal_domain_customer.UpdateCustomerRequstDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "internal_domain_inventory.IncreaseInventoryDTO": {
            "type": "object",
            "properties": {
                "inQty": {
                    "type": "integer"
                },
                "outQty": {
                    "type": "integer"
                },
                "productId": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                }
            }
        },
        "internal_domain_itemtransactions.ResquestAdjustInventoryDTO": {
            "type": "object",
            "properties": {
                "baseQty": {
                    "type": "integer"
                },
                "createdAt": {
                    "description": "Timestamp of the transaction",
                    "type": "string"
                },
                "derivedQty": {
                    "type": "integer"
                },
                "inQty": {
                    "description": "Quantity to be added",
                    "type": "integer"
                },
                "outQty": {
                    "description": "Quantity to be removed",
                    "type": "integer"
                },
                "productId": {
                    "type": "string"
                },
                "referenceNo": {
                    "description": "Reference number for the transaction",
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "tranType": {
                    "description": "DEBIT or CREDIT",
                    "type": "string"
                },
                "uom": {
                    "description": "Unit of Measure (e.g., EACH, KG)",
                    "type": "string"
                }
            }
        },
        "internal_domain_product.CreateProductRequstDTO": {
            "type": "object",
            "required": [
                "buyPrice",
                "categoryId",
                "productName",
                "qtyOhHand",
                "reorderlvl",
                "sellPriceLevel1",
                "sellPriceLevel2",
                "uomId"
            ],
            "properties": {
                "brandName": {
                    "type": "string"
                },
                "buyPrice": {
                    "type": "integer",
                    "minimum": 1
                },
                "categoryId": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "productName": {
                    "type": "string",
                    "minLength": 3
                },
                "qtyOhHand": {
                    "type": "integer"
                },
                "reorderlvl": {
                    "type": "integer",
                    "minimum": 1
                },
                "sellPriceLevel1": {
                    "type": "integer",
                    "minimum": 1
                },
                "sellPriceLevel2": {
                    "type": "integer",
                    "minimum": 1
                },
                "uom": {
                    "type": "string"
                },
                "uomId": {
                    "type": "integer"
                }
            }
        },
        "internal_domain_product.UpdateProductRequstDTO": {
            "type": "object",
            "required": [
                "buyPrice",
                "categoryId",
                "productName",
                "sellPricelvl1",
                "uomId"
            ],
            "properties": {
                "brandName": {
                    "description": "ReorderLvl      uint   `json:\"reorderlvl\" gorm:\"default:1\" validate:\"required,min=1\"`\nQtyOnHand       int    `json:\"qtyOhHand\" validate:\"required\"`",
                    "type": "string"
                },
                "buyPrice": {
                    "description": "Uom             string `json:\"uom\" validate:\"required,min=2\"`",
                    "type": "integer",
                    "minimum": 1
                },
                "categoryId": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "productName": {
                    "type": "string",
                    "minLength": 3
                },
                "sellPricelvl1": {
                    "type": "integer",
                    "minimum": 1
                },
                "sellPricelvl2": {
                    "type": "integer"
                },
                "uomId": {
                    "type": "integer"
                }
            }
        },
        "internal_domain_purchase.PurchaseInvoiceRequestDTO": {
            "type": "object",
            "properties": {
                "discount": {
                    "type": "integer"
                },
                "grandTotal": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "purchaseDate": {
                    "type": "string"
                },
                "purchaseDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.PurchaseDetail"
                    }
                },
                "remark": {
                    "type": "string"
                },
                "supplierId": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "internal_domain_sale.SaleInvoiceRequestDTO": {
            "type": "object",
            "properties": {
                "customerId": {
                    "type": "integer"
                },
                "discount": {
                    "type": "integer"
                },
                "grandTotal": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "saleDate": {
                    "type": "string"
                },
                "saleDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_sankangkin_di-rest-api_internal_models.SaleDetail"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "internal_domain_supplier.CreateSupplierRequestDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "internal_domain_supplier.UpdateSupplierRequstDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}